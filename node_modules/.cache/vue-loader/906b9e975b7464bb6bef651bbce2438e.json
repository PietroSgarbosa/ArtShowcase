{"remainingRequest":"C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\vue-image-crop-upload\\upload-1.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\vue-image-crop-upload\\upload-1.vue","mtime":499162500000},{"path":"C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pietro\\Desktop\\Udemy - Estudo pessoal\\GitArt\\ArtShowcase\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n'use strict';\r\nimport language from './utils/language.js';\r\nimport mimes from './utils/mimes.js';\r\nimport data2blob from './utils/data2blob.js';\r\nimport effectRipple from './utils/effectRipple.js';\r\n\r\nexport default {\r\n    props: {\r\n        // 域，上传文件name，触发事件会带上（如果一个页面多个图片上传控件，可以做区分\r\n        field: {\r\n            type: String,\r\n            'default': 'avatar'\r\n        },\r\n        // 类似于id，触发事件会带上（如果一个页面多个图片上传控件，可以做区分\r\n        ki: {\r\n            'default': 0\r\n        },\r\n        // 显示该控件与否\r\n        value: {\r\n            twoWay: true,\r\n            'default': true\r\n        },\r\n        // 上传地址\r\n        url: {\r\n            type: String,\r\n            'default': ''\r\n        },\r\n        // 其他要上传文件附带的数据，对象格式\r\n        params: {\r\n            type: Object,\r\n            'default': null\r\n        },\r\n\t\t//Add custom headers\r\n        headers: {\r\n            type: Object,\r\n            'default': null\r\n        },\r\n        // 剪裁图片的宽\r\n        width: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n        // 剪裁图片的高\r\n        height: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n\t\t// 不显示旋转功能\r\n\t\tnoRotate: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\t// 不预览圆形图片\r\n\t\tnoCircle: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\t// 不预览方形图片\r\n\t\tnoSquare: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n        // 单文件大小限制\r\n        maxSize: {\r\n            type: Number,\r\n            'default': 10240\r\n        },\r\n        // 语言类型\r\n        langType: {\r\n            type: String,\r\n            'default': 'zh'\r\n        },\r\n        // 语言包\r\n        langExt: {\r\n            type: Object,\r\n            'default': null\r\n        },\r\n        // 图片上传格式\r\n        imgFormat: {\r\n            type: String,\r\n            'default': 'png'\r\n        },\r\n\t\t// 图片背景 jpg情况下生效\r\n\t\timgBgc: {\r\n\t\t\ttype: String,\r\n\t\t\t'default': '#fff'\r\n\t\t},\r\n        // 是否支持跨域\r\n\t\twithCredentials: {\r\n\t\t\ttype: Boolean,\r\n\t\t\t'default': false\r\n        },\r\n        method: {\r\n\t\t\ttype: String,\r\n\t\t\t'default': 'POST'\r\n\t\t},\r\n    },\r\n    data() {\r\n        let that = this,\r\n            {\r\n                imgFormat,\r\n                langType,\r\n                langExt,\r\n                width,\r\n                height\r\n            } = that,\r\n            isSupported = true,\r\n            allowImgFormat = [\r\n                'jpg',\r\n                'png'\r\n            ],\r\n            tempImgFormat = allowImgFormat.indexOf(imgFormat) === -1 ? 'jpg' : imgFormat,\r\n            lang = language[langType] ? language[langType] : language['en'],\r\n            mime = mimes[tempImgFormat];\r\n        // 规范图片格式\r\n        that.imgFormat = tempImgFormat;\r\n\r\n        if (langExt) {\r\n            Object.assign(lang, langExt);\r\n        }\r\n        if (typeof FormData != 'function') {\r\n            isSupported = false;\r\n        }\r\n        return {\r\n            // 图片的mime\r\n            mime,\r\n\r\n            // 语言包\r\n            lang,\r\n\r\n            // 浏览器是否支持该控件\r\n            isSupported,\r\n            // 浏览器是否支持触屏事件\r\n            isSupportTouch: document.hasOwnProperty(\"ontouchstart\"),\r\n\r\n            // 步骤\r\n            step: 1, //1选择文件 2剪裁 3上传\r\n\r\n            // 上传状态及进度\r\n            loading: 0, //0未开始 1正在 2成功 3错误\r\n            progress: 0,\r\n\r\n            // 是否有错误及错误信息\r\n            hasError: false,\r\n            errorMsg: '',\r\n\r\n            // 需求图宽高比\r\n            ratio: width / height,\r\n\r\n            // 原图地址、生成图片地址\r\n            sourceImg: null,\r\n            sourceImgUrl: '',\r\n            createImgUrl: '',\r\n\r\n            // 原图片拖动事件初始值\r\n            sourceImgMouseDown: {\r\n                on: false,\r\n                mX: 0, //鼠标按下的坐标\r\n                mY: 0,\r\n                x: 0, //scale原图坐标\r\n                y: 0\r\n            },\r\n\r\n            // 生成图片预览的容器大小\r\n            previewContainer: {\r\n                width: 100,\r\n                height: 100\r\n            },\r\n\r\n            // 原图容器宽高\r\n            sourceImgContainer: { // sic\r\n                width: 240,\r\n                height: 184 // 如果生成图比例与此一致会出现bug，先改成特殊的格式吧，哈哈哈\r\n            },\r\n\r\n            // 原图展示属性\r\n            scale: {\r\n                zoomAddOn: false, //按钮缩放事件开启\r\n                zoomSubOn: false, //按钮缩放事件开启\r\n                range: 1, //最大100\r\n\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n                maxWidth: 0,\r\n                maxHeight: 0,\r\n                minWidth: 0, //最宽\r\n                minHeight: 0,\r\n                naturalWidth: 0, //原宽\r\n                naturalHeight: 0\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        // 进度条样式\r\n        progressStyle() {\r\n            let {\r\n                progress\r\n            } = this;\r\n            return {\r\n                width: progress + '%'\r\n            }\r\n        },\r\n        // 原图样式\r\n        sourceImgStyle() {\r\n            let {\r\n                scale,\r\n                sourceImgMasking\r\n            } = this;\r\n            return {\r\n                top: scale.y + sourceImgMasking.y + 'px',\r\n                left: scale.x + sourceImgMasking.x + 'px',\r\n                width: scale.width + 'px',\r\n                height: scale.height + 'px'\r\n            }\r\n        },\r\n        // 原图蒙版属性\r\n        sourceImgMasking() {\r\n            let {\r\n\t                width,\r\n\t                height,\r\n\t                ratio,\r\n\t                sourceImgContainer\r\n\t            } = this,\r\n\t            sic = sourceImgContainer,\r\n                sicRatio = sic.width / sic.height, // 原图容器宽高比\r\n                x = 0,\r\n                y = 0,\r\n                w = sic.width,\r\n                h = sic.height,\r\n                scale = 1;\r\n            if (ratio < sicRatio) {\r\n                scale = sic.height / height;\r\n                w = sic.height * ratio;\r\n                x = (sic.width - w) / 2;\r\n            }\r\n            if (ratio > sicRatio) {\r\n                scale = sic.width / width;\r\n                h = sic.width / ratio;\r\n                y = (sic.height - h) / 2;\r\n            }\r\n            return {\r\n                scale, // 蒙版相对需求宽高的缩放\r\n                x,\r\n                y,\r\n                width: w,\r\n                height: h\r\n            };\r\n        },\r\n        // 原图遮罩样式\r\n        sourceImgShadeStyle() {\r\n            let {\r\n\t                sourceImgMasking,\r\n\t                sourceImgContainer\r\n\t            } = this,\r\n\t            sic = sourceImgContainer,\r\n                sim = sourceImgMasking,\r\n                w = sim.width == sic.width ? sim.width : (sic.width - sim.width) / 2,\r\n                h = sim.height == sic.height ? sim.height : (sic.height - sim.height) / 2;\r\n            return {\r\n                width: w + 'px',\r\n                height: h + 'px'\r\n            };\r\n        },\r\n        previewStyle() {\r\n            let {\r\n\t                width,\r\n\t                height,\r\n\t                ratio,\r\n\t                previewContainer\r\n\t            } = this,\r\n\t            pc = previewContainer,\r\n                w = pc.width,\r\n                h = pc.height,\r\n                pcRatio = w / h;\r\n            if (ratio < pcRatio) {\r\n                w = pc.height * ratio;\r\n            }\r\n            if (ratio > pcRatio) {\r\n                h = pc.width / ratio;\r\n            }\r\n            return {\r\n                width: w + 'px',\r\n                height: h + 'px'\r\n            };\r\n        }\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (newValue && this.loading != 1) {\r\n                this.reset();\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 点击波纹效果\r\n        ripple(e) {\r\n            effectRipple(e);\r\n        },\r\n        // 关闭控件\r\n        off() {\r\n            setTimeout(() => {\r\n                this.value = false;\r\n                if(this.step == 3 && this.loading == 2){\r\n                    this.setStep(1);\r\n                }\r\n            }, 200);\r\n        },\r\n\t\t// 设置步骤\r\n\t\tsetStep(no) {\r\n\t\t\t// 延时是为了显示动画效果呢，哈哈哈\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.step = no;\r\n\t\t\t}, 200);\r\n\t\t},\r\n        /* 图片选择区域函数绑定\r\n         ---------------------------------------------------------------*/\r\n        preventDefault(e) {\r\n            e.preventDefault();\r\n\t\t\treturn false;\r\n        },\r\n        handleClick(e) {\r\n            if (this.loading !== 1) {\r\n                if (e.target !== this.$els.fileinput) {\r\n                    e.preventDefault();\r\n                    if (document.activeElement !== this.$els) {\r\n                        this.$els.fileinput.click();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        handleChange(e) {\r\n            e.preventDefault();\r\n            if (this.loading !== 1) {\r\n                let files = e.target.files || e.dataTransfer.files;\r\n                this.reset();\r\n                if (this.checkFile(files[0])) {\r\n                    this.setSourceImg(files[0]);\r\n                }\r\n            }\r\n        },\r\n        /* ---------------------------------------------------------------*/\r\n\r\n        // 检测选择的文件是否合适\r\n        checkFile(file) {\r\n            let that = this,\r\n                {\r\n                    lang,\r\n                    maxSize\r\n                } = that;\r\n            // 仅限图片\r\n            if (file.type.indexOf('image') === -1) {\r\n                that.hasError = true;\r\n                that.errorMsg = lang.error.onlyImg;\r\n                return false;\r\n            }\r\n\r\n            // 超出大小\r\n            if (file.size / 1024 > maxSize) {\r\n                that.hasError = true;\r\n                that.errorMsg = lang.error.outOfSize + maxSize + 'kb';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        // 重置控件\r\n        reset() {\r\n            this.loading = 0;\r\n            this.progress = 0;\r\n            this.hasError = false;\r\n            this.errorMsg = '';\r\n        },\r\n        // 设置图片源\r\n        setSourceImg(file) {\r\n            this.$dispatch('srcFileSet', file.name, file.type, file.size);\r\n\t\t\tlet that = this,\r\n                fr = new FileReader();\r\n            fr.onload = function(e) {\r\n                that.sourceImgUrl = fr.result;\r\n                that.startCrop();\r\n            }\r\n            fr.readAsDataURL(file);\r\n        },\r\n        // 剪裁前准备工作\r\n        startCrop() {\r\n            let that = this,\r\n                {\r\n                    width,\r\n                    height,\r\n                    ratio,\r\n                    scale,\r\n                    sourceImgUrl,\r\n                    sourceImgMasking,\r\n                    lang\r\n                } = that,\r\n                sim = sourceImgMasking,\r\n                img = new Image();\r\n            img.src = sourceImgUrl;\r\n            img.onload = function() {\r\n                let nWidth = img.naturalWidth,\r\n                    nHeight = img.naturalHeight,\r\n                    nRatio = nWidth / nHeight,\r\n                    w = sim.width,\r\n                    h = sim.height,\r\n                    x = 0,\r\n                    y = 0;\r\n                // 图片像素不达标\r\n                if (nWidth < width || nHeight < height) {\r\n                    that.hasError = true;\r\n                    that.errorMsg = lang.error.lowestPx + width + '*' + height;\r\n                    return false;\r\n                }\r\n                if (ratio > nRatio) {\r\n                    h = w / nRatio;\r\n                    y = (sim.height - h) / 2;\r\n                }\r\n                if (ratio < nRatio) {\r\n                    w = h * nRatio;\r\n                    x = (sim.width - w) / 2;\r\n                }\r\n                scale.range = 0;\r\n                scale.x = x;\r\n                scale.y = y;\r\n                scale.width = w;\r\n                scale.height = h;\r\n                scale.minWidth = w;\r\n                scale.minHeight = h;\r\n                scale.maxWidth = nWidth * sim.scale;\r\n                scale.maxHeight = nHeight * sim.scale;\r\n                scale.naturalWidth = nWidth;\r\n                scale.naturalHeight = nHeight;\r\n                that.sourceImg = img;\r\n                that.createImg();\r\n                that.setStep(2);\r\n            };\r\n        },\r\n        // 鼠标按下图片准备移动\r\n        imgStartMove(e) {\r\n            e.preventDefault();\r\n            // 支持触摸事件，则鼠标事件无效\r\n            if(this.isSupportTouch && !e.targetTouches){\r\n                return false;\r\n            }\r\n            let et = e.targetTouches ? e.targetTouches[0] : e,\r\n                {\r\n                    sourceImgMouseDown,\r\n                    scale\r\n                } = this,\r\n                simd = sourceImgMouseDown;\r\n            simd.mX = et.screenX;\r\n            simd.mY = et.screenY;\r\n            simd.x = scale.x;\r\n            simd.y = scale.y;\r\n            simd.on = true;\r\n        },\r\n        // 鼠标按下状态下移动，图片移动\r\n        imgMove(e) {\r\n            e.preventDefault();\r\n            // 支持触摸事件，则鼠标事件无效\r\n            if(this.isSupportTouch && !e.targetTouches){\r\n                return false;\r\n            }\r\n            let et = e.targetTouches ? e.targetTouches[0] : e,\r\n                {\r\n                    sourceImgMouseDown: {\r\n                        on,\r\n                        mX,\r\n                        mY,\r\n                        x,\r\n                        y\r\n                    },\r\n                    scale,\r\n                    sourceImgMasking\r\n                } = this,\r\n                sim = sourceImgMasking,\r\n                nX = et.screenX,\r\n                nY = et.screenY,\r\n                dX = nX - mX,\r\n                dY = nY - mY,\r\n                rX = x + dX,\r\n                rY = y + dY;\r\n            if (!on) return;\r\n            if (rX > 0) {\r\n                rX = 0;\r\n            }\r\n            if (rY > 0) {\r\n                rY = 0;\r\n            }\r\n            if (rX < sim.width - scale.width) {\r\n                rX = sim.width - scale.width;\r\n            }\r\n            if (rY < sim.height - scale.height) {\r\n                rY = sim.height - scale.height;\r\n            }\r\n            scale.x = rX;\r\n            scale.y = rY;\r\n        },\r\n\t\t// 顺时针旋转图片\r\n        rotateImg(e) {\r\n\t\t\tlet {\r\n\t\t\t\t\tsourceImg,\r\n                    scale: {\r\n\t\t\t\t\t\tnaturalWidth,\r\n\t\t\t\t\t\tnaturalHeight,\r\n                    }\r\n                } = this,\r\n\t\t\t\twidth = naturalHeight,\r\n\t\t\t\theight = naturalWidth,\r\n                canvas = this.$els.canvas,\r\n                ctx = canvas.getContext('2d');\r\n\t\t\tcanvas.width = width;\r\n            canvas.height = height;\r\n            ctx.clearRect(0, 0, width, height);\r\n\r\n\t\t\tctx.fillStyle = 'rgba(0,0,0,0)';\r\n\t\t\tctx.fillRect(0, 0, width, height);\r\n\r\n\t\t\tctx.translate(width, 0);\r\n            ctx.rotate(Math.PI * 90 / 180);\r\n\r\n            ctx.drawImage(sourceImg, 0, 0, naturalWidth, naturalHeight);\r\n            let imgUrl = canvas.toDataURL(mimes['png']);\r\n\r\n\t\t\tthis.sourceImgUrl = imgUrl;\r\n\t\t\tthis.startCrop();\r\n        },\r\n\r\n        // 按钮按下开始放大\r\n        startZoomAdd(e) {\r\n            let that = this,\r\n                {\r\n                    scale\r\n                } = that;\r\n            scale.zoomAddOn = true;\r\n\r\n            function zoom() {\r\n                if (scale.zoomAddOn) {\r\n                    let range = scale.range >= 100 ? 100 : ++scale.range;\r\n                    that.zoomImg(range);\r\n                    setTimeout(function() {\r\n                        zoom();\r\n                    }, 60);\r\n                }\r\n            }\r\n            zoom();\r\n        },\r\n        // 按钮松开或移开取消放大\r\n        endZoomAdd(e) {\r\n            this.scale.zoomAddOn = false;\r\n        },\r\n        // 按钮按下开始缩小\r\n        startZoomSub(e) {\r\n            let that = this,\r\n                {\r\n                    scale\r\n                } = that;\r\n            scale.zoomSubOn = true;\r\n\r\n            function zoom() {\r\n                if (scale.zoomSubOn) {\r\n                    let range = scale.range <= 0 ? 0 : --scale.range;\r\n                    that.zoomImg(range);\r\n                    setTimeout(function() {\r\n                        zoom();\r\n                    }, 60);\r\n                }\r\n            }\r\n            zoom();\r\n        },\r\n        // 按钮松开或移开取消缩小\r\n        endZoomSub(e) {\r\n            let {\r\n                scale\r\n            } = this;\r\n            scale.zoomSubOn = false;\r\n        },\r\n        zoomChange(e) {\r\n            this.zoomImg(e.target.value);\r\n        },\r\n        // 缩放原图\r\n        zoomImg(newRange) {\r\n            let that = this,\r\n                {\r\n                    sourceImgMasking,\r\n                    sourceImgMouseDown,\r\n                    scale\r\n                } = this,\r\n                {\r\n                    maxWidth,\r\n                    maxHeight,\r\n                    minWidth,\r\n                    minHeight,\r\n                    width,\r\n                    height,\r\n                    x,\r\n                    y,\r\n                    range\r\n                } = scale,\r\n                sim = sourceImgMasking,\r\n                // 蒙版宽高\r\n                sWidth = sim.width,\r\n                sHeight = sim.height,\r\n                // 新宽高\r\n                nWidth = minWidth + (maxWidth - minWidth) * newRange / 100,\r\n                nHeight = minHeight + (maxHeight - minHeight) * newRange / 100,\r\n                // 新坐标（根据蒙版中心点缩放）\r\n                nX = sWidth / 2 - (nWidth / width) * (sWidth / 2 - x),\r\n                nY = sHeight / 2 - (nHeight / height) * (sHeight / 2 - y);\r\n\r\n            // 判断新坐标是否超过蒙版限制\r\n            if (nX > 0) {\r\n                nX = 0;\r\n            }\r\n            if (nY > 0) {\r\n                nY = 0;\r\n            }\r\n            if (nX < sWidth - nWidth) {\r\n                nX = sWidth - nWidth;\r\n            }\r\n            if (nY < sHeight - nHeight) {\r\n                nY = sHeight - nHeight;\r\n            }\r\n\r\n            // 赋值处理\r\n            scale.x = nX;\r\n            scale.y = nY;\r\n            scale.width = nWidth;\r\n            scale.height = nHeight;\r\n            scale.range = newRange;\r\n            setTimeout(function() {\r\n                if (scale.range == newRange) {\r\n                    that.createImg();\r\n                }\r\n            }, 300);\r\n        },\r\n        // 生成需求图片\r\n        createImg(e) {\r\n            let that = this,\r\n                {\r\n\t\t\t\t\timgFormat,\r\n\t\t\t\t\timgBgc,\r\n                    mime,\r\n                    sourceImg,\r\n                    scale: {\r\n                        x,\r\n                        y,\r\n                        width,\r\n                        height,\r\n                    },\r\n                    sourceImgMasking: {\r\n                        scale\r\n                    }\r\n                } = that,\r\n                canvas = that.$els.canvas,\r\n                ctx = canvas.getContext('2d');\r\n            if (e) {\r\n                // 取消鼠标按下移动状态\r\n                that.sourceImgMouseDown.on = false;\r\n\t\t\t}\r\n            canvas.width = that.width;\r\n            canvas.height = that.height;\r\n            ctx.clearRect(0, 0, that.width, that.height);\r\n\r\n\t\t\tif(imgFormat == 'png'){\r\n\t\t\t\tctx.fillStyle = 'rgba(0,0,0,0)';\r\n\t\t\t} else{\r\n\t\t\t\t// 如果jpg 为透明区域设置背景，默认白色\r\n\t\t\t\tctx.fillStyle = imgBgc;\r\n\t\t\t}\r\n\t\t\tctx.fillRect(0, 0, that.width, that.height);\r\n\r\n            ctx.drawImage(sourceImg, x / scale, y / scale, width / scale, height / scale);\r\n            that.createImgUrl = canvas.toDataURL(mime);\r\n        },\r\n        // 预备上传\r\n        prepareUpload(){\r\n            let {\r\n                url,\r\n                createImgUrl,\r\n                field,\r\n                ki\r\n            } = this;\r\n            this.$dispatch('cropSuccess', createImgUrl, field, ki);\r\n            if(typeof url == 'string' && url){\r\n                this.upload();\r\n            }else{\r\n                this.off();\r\n            }\r\n        },\r\n        // 上传图片\r\n        upload() {\r\n            let that = this,\r\n                {\r\n                    lang,\r\n                    imgFormat,\r\n                    mime,\r\n                    url,\r\n                    params,\r\n                    field,\r\n                    ki,\r\n                    createImgUrl,\r\n                    withCredentials,\r\n                    method\r\n                } = this,\r\n                fmData = new FormData();\r\n            fmData.append(field, data2blob(createImgUrl, mime), field + '.' + imgFormat);\r\n\r\n            // 添加其他参数\r\n            if (typeof params == 'object' && params) {\r\n                Object.keys(params).forEach((k) => {\r\n                    fmData.append(k, params[k]);\r\n                })\r\n            }\r\n\r\n            // 监听进度回调\r\n            const uploadProgress = function(event) {\r\n                if (event.lengthComputable) {\r\n                    that.progress = 100 * Math.round(event.loaded) / event.total;\r\n                }\r\n            };\r\n\r\n            // 上传文件\r\n            that.reset();\r\n            that.loading = 1;\r\n            that.setStep(3);\r\n            new Promise(function(resolve, reject) {\r\n                let client = new XMLHttpRequest();\r\n                client.open(method, url, true);\r\n                client.withCredentials = withCredentials;\r\n                client.onreadystatechange = function() {\r\n                    if (this.readyState !== 4) {\r\n                        return;\r\n                    }\r\n                    if (this.status === 200 || this.status === 201) {\r\n                        resolve(JSON.parse(this.responseText));\r\n                    } else {\r\n                        reject(this.status);\r\n                    }\r\n                };\r\n                client.upload.addEventListener(\"progress\", uploadProgress, false); //监听进度\\\r\n\t\t\t\t// 设置header\r\n\t            if (typeof headers == 'object' && headers) {\r\n\t                Object.keys(headers).forEach((k) => {\r\n\t                    client.setRequestHeader(k, headers[k]);\r\n\t                })\r\n\t            }\r\n                client.send(fmData);\r\n            }).then(\r\n                // 上传成功\r\n                function(resData) {\r\n                    if (that.value) {\r\n                        that.loading = 2;\r\n                        that.$dispatch('cropUploadSuccess', resData, field, ki);\r\n                    }\r\n\r\n                },\r\n                // 上传失败\r\n                function(sts) {\r\n                    if (that.value) {\r\n                        that.loading = 3;\r\n                        that.hasError = true;\r\n                        that.errorMsg = lang.fail;\r\n                        that.$dispatch('cropUploadFail', sts, field, ki);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n    created(){\r\n        // 绑定按键esc隐藏此插件事件\r\n        document.addEventListener('keyup', (e)=>{\r\n            if(this.value && (e.key == 'Escape' || e.keyCode == 27)){\r\n                this.off();\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n",{"version":3,"sources":["upload-1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"upload-1.vue","sourceRoot":"node_modules/vue-image-crop-upload","sourcesContent":["<template>\r\n<div class=\"vue-image-crop-upload\" v-show=\"value\">\r\n    <div class=\"vicp-wrap\">\r\n        <div class=\"vicp-close\" @click=\"off\">\r\n            <i class=\"vicp-icon4\"></i>\r\n        </div>\r\n\r\n        <div class=\"vicp-step1\" v-show=\"step == 1\">\r\n            <div class=\"vicp-drop-area\"\r\n\t\t\t\t@dragleave=\"preventDefault\"\r\n\t\t\t\t@dragover=\"preventDefault\"\r\n\t\t\t\t@dragenter=\"preventDefault\"\r\n\t\t\t\t@click=\"handleClick\"\r\n\t\t\t\t@drop=\"handleChange\">\r\n                <i class=\"vicp-icon1\" v-show=\"loading != 1\">\r\n\t\t\t\t\t<i class=\"vicp-icon1-arrow\"></i>\r\n\t                <i class=\"vicp-icon1-body\"></i>\r\n\t                <i class=\"vicp-icon1-bottom\"></i>\r\n                </i>\r\n                <span class=\"vicp-hint\" v-show=\"loading !== 1\">{{ lang.hint }}</span>\r\n                <span class=\"vicp-no-supported-hint\" v-show=\"!isSupported\">{{ lang.noSupported }}</span>\r\n                <input type=\"file\" v-show=\"false\" v-if=\"step == 1\" @change=\"handleChange\" v-el:fileinput>\r\n            </div>\r\n            <div class=\"vicp-error\" v-show=\"hasError\">\r\n                <i class=\"vicp-icon2\"></i> {{ errorMsg }}\r\n            </div>\r\n            <div class=\"vicp-operate\">\r\n                <a @click=\"off\" @mousedown=\"ripple\">{{ lang.btn.off }}</a>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"vicp-step2\" v-if=\"step == 2\">\r\n            <div class=\"vicp-crop\">\r\n                <div class=\"vicp-crop-left\">\r\n                    <div class=\"vicp-img-container\">\r\n                        <img :src=\"sourceImgUrl\"\r\n\t\t\t\t\t\t\t:style=\"sourceImgStyle\"\r\n\t\t\t\t\t\t\tclass=\"vicp-img\"\r\n\t\t\t\t\t\t\tdraggable=\"false\"\r\n                            @drag=\"preventDefault\"\r\n                            @dragstart=\"preventDefault\"\r\n                            @dragend=\"preventDefault\"\r\n                            @dragleave=\"preventDefault\"\r\n                            @dragover=\"preventDefault\"\r\n                            @dragenter=\"preventDefault\"\r\n                            @drop=\"preventDefault\"\r\n                            @touchstart=\"imgStartMove\"\r\n                            @touchmove=\"imgMove\"\r\n                            @touchend=\"createImg\"\r\n                            @touchcancel=\"createImg\"\r\n                            @mousedown=\"imgStartMove\"\r\n\t\t\t\t\t\t\t@mousemove=\"imgMove\"\r\n\t\t\t\t\t\t\t@mouseup=\"createImg\"\r\n\t\t\t\t\t\t\t@mouseout=\"createImg\"\r\n\t\t\t\t\t\t\tv-el:img>\r\n                        <div class=\"vicp-img-shade vicp-img-shade-1\" :style=\"sourceImgShadeStyle\"></div>\r\n                        <div class=\"vicp-img-shade vicp-img-shade-2\" :style=\"sourceImgShadeStyle\"></div>\r\n                    </div>\r\n\r\n                    <div class=\"vicp-range\">\r\n                        <input type=\"range\" :value=\"scale.range\" step=\"1\" min=\"0\" max=\"100\" @input=\"zoomChange\">\r\n                        <i @mousedown=\"startZoomSub\" @mouseout=\"endZoomSub\" @mouseup=\"endZoomSub\" class=\"vicp-icon5\"></i>\r\n                        <i @mousedown=\"startZoomAdd\" @mouseout=\"endZoomAdd\" @mouseup=\"endZoomAdd\" class=\"vicp-icon6\"></i>\r\n                    </div>\r\n\r\n\t\t\t\t\t<div class=\"vicp-rotate\" v-if=\"!noRotate\">\r\n\t\t\t\t\t\t<i @click=\"rotateImg\">↺</i>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n                <div class=\"vicp-crop-right\">\r\n                    <div class=\"vicp-preview\">\r\n\t\t\t\t\t\t<div class=\"vicp-preview-item\" v-if=\"!noSquare\">\r\n\t\t\t\t\t\t\t<img :src=\"createImgUrl\" :style=\"previewStyle\">\r\n\t\t\t\t\t\t\t<span>{{ lang.preview }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vicp-preview-item vicp-preview-item-circle\" v-if=\"!noCircle\">\r\n\t\t\t\t\t\t\t<img :src=\"createImgUrl\" :style=\"previewStyle\">\r\n\t\t\t\t\t\t\t<span>{{ lang.preview }}</span>\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vicp-operate\">\r\n                <a @click=\"setStep(1)\" @mousedown=\"ripple\">{{ lang.btn.back }}</a>\r\n                <a class=\"vicp-operate-btn\" @click=\"prepareUpload\" @mousedown=\"ripple\">{{ lang.btn.save }}</a>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"vicp-step3\" v-if=\"step == 3\">\r\n            <div class=\"vicp-upload\">\r\n                <span class=\"vicp-loading\" v-show=\"loading === 1\">{{ lang.loading }}</span>\r\n                <div class=\"vicp-progress-wrap\">\r\n                    <span class=\"vicp-progress\" v-show=\"loading === 1\" :style=\"progressStyle\"></span>\r\n                </div>\r\n                <div class=\"vicp-error\" v-show=\"hasError\">\r\n                    <i class=\"vicp-icon2\"></i> {{ errorMsg }}\r\n                </div>\r\n                <div class=\"vicp-success\" v-show=\"loading === 2\">\r\n                    <i class=\"vicp-icon3\"></i> {{ lang.success }}\r\n                </div>\r\n            </div>\r\n            <div class=\"vicp-operate\">\r\n                <a @click=\"setStep(2)\" @mousedown=\"ripple\">{{ lang.btn.back }}</a>\r\n                <a @click=\"off\" @mousedown=\"ripple\">{{ lang.btn.close }}</a>\r\n            </div>\r\n        </div>\r\n        <canvas v-show=\"false\" :width=\"width\" :height=\"height\" v-el:canvas></canvas>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n'use strict';\r\nimport language from './utils/language.js';\r\nimport mimes from './utils/mimes.js';\r\nimport data2blob from './utils/data2blob.js';\r\nimport effectRipple from './utils/effectRipple.js';\r\n\r\nexport default {\r\n    props: {\r\n        // 域，上传文件name，触发事件会带上（如果一个页面多个图片上传控件，可以做区分\r\n        field: {\r\n            type: String,\r\n            'default': 'avatar'\r\n        },\r\n        // 类似于id，触发事件会带上（如果一个页面多个图片上传控件，可以做区分\r\n        ki: {\r\n            'default': 0\r\n        },\r\n        // 显示该控件与否\r\n        value: {\r\n            twoWay: true,\r\n            'default': true\r\n        },\r\n        // 上传地址\r\n        url: {\r\n            type: String,\r\n            'default': ''\r\n        },\r\n        // 其他要上传文件附带的数据，对象格式\r\n        params: {\r\n            type: Object,\r\n            'default': null\r\n        },\r\n\t\t//Add custom headers\r\n        headers: {\r\n            type: Object,\r\n            'default': null\r\n        },\r\n        // 剪裁图片的宽\r\n        width: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n        // 剪裁图片的高\r\n        height: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n\t\t// 不显示旋转功能\r\n\t\tnoRotate: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\t// 不预览圆形图片\r\n\t\tnoCircle: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\t// 不预览方形图片\r\n\t\tnoSquare: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n        // 单文件大小限制\r\n        maxSize: {\r\n            type: Number,\r\n            'default': 10240\r\n        },\r\n        // 语言类型\r\n        langType: {\r\n            type: String,\r\n            'default': 'zh'\r\n        },\r\n        // 语言包\r\n        langExt: {\r\n            type: Object,\r\n            'default': null\r\n        },\r\n        // 图片上传格式\r\n        imgFormat: {\r\n            type: String,\r\n            'default': 'png'\r\n        },\r\n\t\t// 图片背景 jpg情况下生效\r\n\t\timgBgc: {\r\n\t\t\ttype: String,\r\n\t\t\t'default': '#fff'\r\n\t\t},\r\n        // 是否支持跨域\r\n\t\twithCredentials: {\r\n\t\t\ttype: Boolean,\r\n\t\t\t'default': false\r\n        },\r\n        method: {\r\n\t\t\ttype: String,\r\n\t\t\t'default': 'POST'\r\n\t\t},\r\n    },\r\n    data() {\r\n        let that = this,\r\n            {\r\n                imgFormat,\r\n                langType,\r\n                langExt,\r\n                width,\r\n                height\r\n            } = that,\r\n            isSupported = true,\r\n            allowImgFormat = [\r\n                'jpg',\r\n                'png'\r\n            ],\r\n            tempImgFormat = allowImgFormat.indexOf(imgFormat) === -1 ? 'jpg' : imgFormat,\r\n            lang = language[langType] ? language[langType] : language['en'],\r\n            mime = mimes[tempImgFormat];\r\n        // 规范图片格式\r\n        that.imgFormat = tempImgFormat;\r\n\r\n        if (langExt) {\r\n            Object.assign(lang, langExt);\r\n        }\r\n        if (typeof FormData != 'function') {\r\n            isSupported = false;\r\n        }\r\n        return {\r\n            // 图片的mime\r\n            mime,\r\n\r\n            // 语言包\r\n            lang,\r\n\r\n            // 浏览器是否支持该控件\r\n            isSupported,\r\n            // 浏览器是否支持触屏事件\r\n            isSupportTouch: document.hasOwnProperty(\"ontouchstart\"),\r\n\r\n            // 步骤\r\n            step: 1, //1选择文件 2剪裁 3上传\r\n\r\n            // 上传状态及进度\r\n            loading: 0, //0未开始 1正在 2成功 3错误\r\n            progress: 0,\r\n\r\n            // 是否有错误及错误信息\r\n            hasError: false,\r\n            errorMsg: '',\r\n\r\n            // 需求图宽高比\r\n            ratio: width / height,\r\n\r\n            // 原图地址、生成图片地址\r\n            sourceImg: null,\r\n            sourceImgUrl: '',\r\n            createImgUrl: '',\r\n\r\n            // 原图片拖动事件初始值\r\n            sourceImgMouseDown: {\r\n                on: false,\r\n                mX: 0, //鼠标按下的坐标\r\n                mY: 0,\r\n                x: 0, //scale原图坐标\r\n                y: 0\r\n            },\r\n\r\n            // 生成图片预览的容器大小\r\n            previewContainer: {\r\n                width: 100,\r\n                height: 100\r\n            },\r\n\r\n            // 原图容器宽高\r\n            sourceImgContainer: { // sic\r\n                width: 240,\r\n                height: 184 // 如果生成图比例与此一致会出现bug，先改成特殊的格式吧，哈哈哈\r\n            },\r\n\r\n            // 原图展示属性\r\n            scale: {\r\n                zoomAddOn: false, //按钮缩放事件开启\r\n                zoomSubOn: false, //按钮缩放事件开启\r\n                range: 1, //最大100\r\n\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n                maxWidth: 0,\r\n                maxHeight: 0,\r\n                minWidth: 0, //最宽\r\n                minHeight: 0,\r\n                naturalWidth: 0, //原宽\r\n                naturalHeight: 0\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        // 进度条样式\r\n        progressStyle() {\r\n            let {\r\n                progress\r\n            } = this;\r\n            return {\r\n                width: progress + '%'\r\n            }\r\n        },\r\n        // 原图样式\r\n        sourceImgStyle() {\r\n            let {\r\n                scale,\r\n                sourceImgMasking\r\n            } = this;\r\n            return {\r\n                top: scale.y + sourceImgMasking.y + 'px',\r\n                left: scale.x + sourceImgMasking.x + 'px',\r\n                width: scale.width + 'px',\r\n                height: scale.height + 'px'\r\n            }\r\n        },\r\n        // 原图蒙版属性\r\n        sourceImgMasking() {\r\n            let {\r\n\t                width,\r\n\t                height,\r\n\t                ratio,\r\n\t                sourceImgContainer\r\n\t            } = this,\r\n\t            sic = sourceImgContainer,\r\n                sicRatio = sic.width / sic.height, // 原图容器宽高比\r\n                x = 0,\r\n                y = 0,\r\n                w = sic.width,\r\n                h = sic.height,\r\n                scale = 1;\r\n            if (ratio < sicRatio) {\r\n                scale = sic.height / height;\r\n                w = sic.height * ratio;\r\n                x = (sic.width - w) / 2;\r\n            }\r\n            if (ratio > sicRatio) {\r\n                scale = sic.width / width;\r\n                h = sic.width / ratio;\r\n                y = (sic.height - h) / 2;\r\n            }\r\n            return {\r\n                scale, // 蒙版相对需求宽高的缩放\r\n                x,\r\n                y,\r\n                width: w,\r\n                height: h\r\n            };\r\n        },\r\n        // 原图遮罩样式\r\n        sourceImgShadeStyle() {\r\n            let {\r\n\t                sourceImgMasking,\r\n\t                sourceImgContainer\r\n\t            } = this,\r\n\t            sic = sourceImgContainer,\r\n                sim = sourceImgMasking,\r\n                w = sim.width == sic.width ? sim.width : (sic.width - sim.width) / 2,\r\n                h = sim.height == sic.height ? sim.height : (sic.height - sim.height) / 2;\r\n            return {\r\n                width: w + 'px',\r\n                height: h + 'px'\r\n            };\r\n        },\r\n        previewStyle() {\r\n            let {\r\n\t                width,\r\n\t                height,\r\n\t                ratio,\r\n\t                previewContainer\r\n\t            } = this,\r\n\t            pc = previewContainer,\r\n                w = pc.width,\r\n                h = pc.height,\r\n                pcRatio = w / h;\r\n            if (ratio < pcRatio) {\r\n                w = pc.height * ratio;\r\n            }\r\n            if (ratio > pcRatio) {\r\n                h = pc.width / ratio;\r\n            }\r\n            return {\r\n                width: w + 'px',\r\n                height: h + 'px'\r\n            };\r\n        }\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (newValue && this.loading != 1) {\r\n                this.reset();\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 点击波纹效果\r\n        ripple(e) {\r\n            effectRipple(e);\r\n        },\r\n        // 关闭控件\r\n        off() {\r\n            setTimeout(() => {\r\n                this.value = false;\r\n                if(this.step == 3 && this.loading == 2){\r\n                    this.setStep(1);\r\n                }\r\n            }, 200);\r\n        },\r\n\t\t// 设置步骤\r\n\t\tsetStep(no) {\r\n\t\t\t// 延时是为了显示动画效果呢，哈哈哈\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.step = no;\r\n\t\t\t}, 200);\r\n\t\t},\r\n        /* 图片选择区域函数绑定\r\n         ---------------------------------------------------------------*/\r\n        preventDefault(e) {\r\n            e.preventDefault();\r\n\t\t\treturn false;\r\n        },\r\n        handleClick(e) {\r\n            if (this.loading !== 1) {\r\n                if (e.target !== this.$els.fileinput) {\r\n                    e.preventDefault();\r\n                    if (document.activeElement !== this.$els) {\r\n                        this.$els.fileinput.click();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        handleChange(e) {\r\n            e.preventDefault();\r\n            if (this.loading !== 1) {\r\n                let files = e.target.files || e.dataTransfer.files;\r\n                this.reset();\r\n                if (this.checkFile(files[0])) {\r\n                    this.setSourceImg(files[0]);\r\n                }\r\n            }\r\n        },\r\n        /* ---------------------------------------------------------------*/\r\n\r\n        // 检测选择的文件是否合适\r\n        checkFile(file) {\r\n            let that = this,\r\n                {\r\n                    lang,\r\n                    maxSize\r\n                } = that;\r\n            // 仅限图片\r\n            if (file.type.indexOf('image') === -1) {\r\n                that.hasError = true;\r\n                that.errorMsg = lang.error.onlyImg;\r\n                return false;\r\n            }\r\n\r\n            // 超出大小\r\n            if (file.size / 1024 > maxSize) {\r\n                that.hasError = true;\r\n                that.errorMsg = lang.error.outOfSize + maxSize + 'kb';\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        // 重置控件\r\n        reset() {\r\n            this.loading = 0;\r\n            this.progress = 0;\r\n            this.hasError = false;\r\n            this.errorMsg = '';\r\n        },\r\n        // 设置图片源\r\n        setSourceImg(file) {\r\n            this.$dispatch('srcFileSet', file.name, file.type, file.size);\r\n\t\t\tlet that = this,\r\n                fr = new FileReader();\r\n            fr.onload = function(e) {\r\n                that.sourceImgUrl = fr.result;\r\n                that.startCrop();\r\n            }\r\n            fr.readAsDataURL(file);\r\n        },\r\n        // 剪裁前准备工作\r\n        startCrop() {\r\n            let that = this,\r\n                {\r\n                    width,\r\n                    height,\r\n                    ratio,\r\n                    scale,\r\n                    sourceImgUrl,\r\n                    sourceImgMasking,\r\n                    lang\r\n                } = that,\r\n                sim = sourceImgMasking,\r\n                img = new Image();\r\n            img.src = sourceImgUrl;\r\n            img.onload = function() {\r\n                let nWidth = img.naturalWidth,\r\n                    nHeight = img.naturalHeight,\r\n                    nRatio = nWidth / nHeight,\r\n                    w = sim.width,\r\n                    h = sim.height,\r\n                    x = 0,\r\n                    y = 0;\r\n                // 图片像素不达标\r\n                if (nWidth < width || nHeight < height) {\r\n                    that.hasError = true;\r\n                    that.errorMsg = lang.error.lowestPx + width + '*' + height;\r\n                    return false;\r\n                }\r\n                if (ratio > nRatio) {\r\n                    h = w / nRatio;\r\n                    y = (sim.height - h) / 2;\r\n                }\r\n                if (ratio < nRatio) {\r\n                    w = h * nRatio;\r\n                    x = (sim.width - w) / 2;\r\n                }\r\n                scale.range = 0;\r\n                scale.x = x;\r\n                scale.y = y;\r\n                scale.width = w;\r\n                scale.height = h;\r\n                scale.minWidth = w;\r\n                scale.minHeight = h;\r\n                scale.maxWidth = nWidth * sim.scale;\r\n                scale.maxHeight = nHeight * sim.scale;\r\n                scale.naturalWidth = nWidth;\r\n                scale.naturalHeight = nHeight;\r\n                that.sourceImg = img;\r\n                that.createImg();\r\n                that.setStep(2);\r\n            };\r\n        },\r\n        // 鼠标按下图片准备移动\r\n        imgStartMove(e) {\r\n            e.preventDefault();\r\n            // 支持触摸事件，则鼠标事件无效\r\n            if(this.isSupportTouch && !e.targetTouches){\r\n                return false;\r\n            }\r\n            let et = e.targetTouches ? e.targetTouches[0] : e,\r\n                {\r\n                    sourceImgMouseDown,\r\n                    scale\r\n                } = this,\r\n                simd = sourceImgMouseDown;\r\n            simd.mX = et.screenX;\r\n            simd.mY = et.screenY;\r\n            simd.x = scale.x;\r\n            simd.y = scale.y;\r\n            simd.on = true;\r\n        },\r\n        // 鼠标按下状态下移动，图片移动\r\n        imgMove(e) {\r\n            e.preventDefault();\r\n            // 支持触摸事件，则鼠标事件无效\r\n            if(this.isSupportTouch && !e.targetTouches){\r\n                return false;\r\n            }\r\n            let et = e.targetTouches ? e.targetTouches[0] : e,\r\n                {\r\n                    sourceImgMouseDown: {\r\n                        on,\r\n                        mX,\r\n                        mY,\r\n                        x,\r\n                        y\r\n                    },\r\n                    scale,\r\n                    sourceImgMasking\r\n                } = this,\r\n                sim = sourceImgMasking,\r\n                nX = et.screenX,\r\n                nY = et.screenY,\r\n                dX = nX - mX,\r\n                dY = nY - mY,\r\n                rX = x + dX,\r\n                rY = y + dY;\r\n            if (!on) return;\r\n            if (rX > 0) {\r\n                rX = 0;\r\n            }\r\n            if (rY > 0) {\r\n                rY = 0;\r\n            }\r\n            if (rX < sim.width - scale.width) {\r\n                rX = sim.width - scale.width;\r\n            }\r\n            if (rY < sim.height - scale.height) {\r\n                rY = sim.height - scale.height;\r\n            }\r\n            scale.x = rX;\r\n            scale.y = rY;\r\n        },\r\n\t\t// 顺时针旋转图片\r\n        rotateImg(e) {\r\n\t\t\tlet {\r\n\t\t\t\t\tsourceImg,\r\n                    scale: {\r\n\t\t\t\t\t\tnaturalWidth,\r\n\t\t\t\t\t\tnaturalHeight,\r\n                    }\r\n                } = this,\r\n\t\t\t\twidth = naturalHeight,\r\n\t\t\t\theight = naturalWidth,\r\n                canvas = this.$els.canvas,\r\n                ctx = canvas.getContext('2d');\r\n\t\t\tcanvas.width = width;\r\n            canvas.height = height;\r\n            ctx.clearRect(0, 0, width, height);\r\n\r\n\t\t\tctx.fillStyle = 'rgba(0,0,0,0)';\r\n\t\t\tctx.fillRect(0, 0, width, height);\r\n\r\n\t\t\tctx.translate(width, 0);\r\n            ctx.rotate(Math.PI * 90 / 180);\r\n\r\n            ctx.drawImage(sourceImg, 0, 0, naturalWidth, naturalHeight);\r\n            let imgUrl = canvas.toDataURL(mimes['png']);\r\n\r\n\t\t\tthis.sourceImgUrl = imgUrl;\r\n\t\t\tthis.startCrop();\r\n        },\r\n\r\n        // 按钮按下开始放大\r\n        startZoomAdd(e) {\r\n            let that = this,\r\n                {\r\n                    scale\r\n                } = that;\r\n            scale.zoomAddOn = true;\r\n\r\n            function zoom() {\r\n                if (scale.zoomAddOn) {\r\n                    let range = scale.range >= 100 ? 100 : ++scale.range;\r\n                    that.zoomImg(range);\r\n                    setTimeout(function() {\r\n                        zoom();\r\n                    }, 60);\r\n                }\r\n            }\r\n            zoom();\r\n        },\r\n        // 按钮松开或移开取消放大\r\n        endZoomAdd(e) {\r\n            this.scale.zoomAddOn = false;\r\n        },\r\n        // 按钮按下开始缩小\r\n        startZoomSub(e) {\r\n            let that = this,\r\n                {\r\n                    scale\r\n                } = that;\r\n            scale.zoomSubOn = true;\r\n\r\n            function zoom() {\r\n                if (scale.zoomSubOn) {\r\n                    let range = scale.range <= 0 ? 0 : --scale.range;\r\n                    that.zoomImg(range);\r\n                    setTimeout(function() {\r\n                        zoom();\r\n                    }, 60);\r\n                }\r\n            }\r\n            zoom();\r\n        },\r\n        // 按钮松开或移开取消缩小\r\n        endZoomSub(e) {\r\n            let {\r\n                scale\r\n            } = this;\r\n            scale.zoomSubOn = false;\r\n        },\r\n        zoomChange(e) {\r\n            this.zoomImg(e.target.value);\r\n        },\r\n        // 缩放原图\r\n        zoomImg(newRange) {\r\n            let that = this,\r\n                {\r\n                    sourceImgMasking,\r\n                    sourceImgMouseDown,\r\n                    scale\r\n                } = this,\r\n                {\r\n                    maxWidth,\r\n                    maxHeight,\r\n                    minWidth,\r\n                    minHeight,\r\n                    width,\r\n                    height,\r\n                    x,\r\n                    y,\r\n                    range\r\n                } = scale,\r\n                sim = sourceImgMasking,\r\n                // 蒙版宽高\r\n                sWidth = sim.width,\r\n                sHeight = sim.height,\r\n                // 新宽高\r\n                nWidth = minWidth + (maxWidth - minWidth) * newRange / 100,\r\n                nHeight = minHeight + (maxHeight - minHeight) * newRange / 100,\r\n                // 新坐标（根据蒙版中心点缩放）\r\n                nX = sWidth / 2 - (nWidth / width) * (sWidth / 2 - x),\r\n                nY = sHeight / 2 - (nHeight / height) * (sHeight / 2 - y);\r\n\r\n            // 判断新坐标是否超过蒙版限制\r\n            if (nX > 0) {\r\n                nX = 0;\r\n            }\r\n            if (nY > 0) {\r\n                nY = 0;\r\n            }\r\n            if (nX < sWidth - nWidth) {\r\n                nX = sWidth - nWidth;\r\n            }\r\n            if (nY < sHeight - nHeight) {\r\n                nY = sHeight - nHeight;\r\n            }\r\n\r\n            // 赋值处理\r\n            scale.x = nX;\r\n            scale.y = nY;\r\n            scale.width = nWidth;\r\n            scale.height = nHeight;\r\n            scale.range = newRange;\r\n            setTimeout(function() {\r\n                if (scale.range == newRange) {\r\n                    that.createImg();\r\n                }\r\n            }, 300);\r\n        },\r\n        // 生成需求图片\r\n        createImg(e) {\r\n            let that = this,\r\n                {\r\n\t\t\t\t\timgFormat,\r\n\t\t\t\t\timgBgc,\r\n                    mime,\r\n                    sourceImg,\r\n                    scale: {\r\n                        x,\r\n                        y,\r\n                        width,\r\n                        height,\r\n                    },\r\n                    sourceImgMasking: {\r\n                        scale\r\n                    }\r\n                } = that,\r\n                canvas = that.$els.canvas,\r\n                ctx = canvas.getContext('2d');\r\n            if (e) {\r\n                // 取消鼠标按下移动状态\r\n                that.sourceImgMouseDown.on = false;\r\n\t\t\t}\r\n            canvas.width = that.width;\r\n            canvas.height = that.height;\r\n            ctx.clearRect(0, 0, that.width, that.height);\r\n\r\n\t\t\tif(imgFormat == 'png'){\r\n\t\t\t\tctx.fillStyle = 'rgba(0,0,0,0)';\r\n\t\t\t} else{\r\n\t\t\t\t// 如果jpg 为透明区域设置背景，默认白色\r\n\t\t\t\tctx.fillStyle = imgBgc;\r\n\t\t\t}\r\n\t\t\tctx.fillRect(0, 0, that.width, that.height);\r\n\r\n            ctx.drawImage(sourceImg, x / scale, y / scale, width / scale, height / scale);\r\n            that.createImgUrl = canvas.toDataURL(mime);\r\n        },\r\n        // 预备上传\r\n        prepareUpload(){\r\n            let {\r\n                url,\r\n                createImgUrl,\r\n                field,\r\n                ki\r\n            } = this;\r\n            this.$dispatch('cropSuccess', createImgUrl, field, ki);\r\n            if(typeof url == 'string' && url){\r\n                this.upload();\r\n            }else{\r\n                this.off();\r\n            }\r\n        },\r\n        // 上传图片\r\n        upload() {\r\n            let that = this,\r\n                {\r\n                    lang,\r\n                    imgFormat,\r\n                    mime,\r\n                    url,\r\n                    params,\r\n                    field,\r\n                    ki,\r\n                    createImgUrl,\r\n                    withCredentials,\r\n                    method\r\n                } = this,\r\n                fmData = new FormData();\r\n            fmData.append(field, data2blob(createImgUrl, mime), field + '.' + imgFormat);\r\n\r\n            // 添加其他参数\r\n            if (typeof params == 'object' && params) {\r\n                Object.keys(params).forEach((k) => {\r\n                    fmData.append(k, params[k]);\r\n                })\r\n            }\r\n\r\n            // 监听进度回调\r\n            const uploadProgress = function(event) {\r\n                if (event.lengthComputable) {\r\n                    that.progress = 100 * Math.round(event.loaded) / event.total;\r\n                }\r\n            };\r\n\r\n            // 上传文件\r\n            that.reset();\r\n            that.loading = 1;\r\n            that.setStep(3);\r\n            new Promise(function(resolve, reject) {\r\n                let client = new XMLHttpRequest();\r\n                client.open(method, url, true);\r\n                client.withCredentials = withCredentials;\r\n                client.onreadystatechange = function() {\r\n                    if (this.readyState !== 4) {\r\n                        return;\r\n                    }\r\n                    if (this.status === 200 || this.status === 201) {\r\n                        resolve(JSON.parse(this.responseText));\r\n                    } else {\r\n                        reject(this.status);\r\n                    }\r\n                };\r\n                client.upload.addEventListener(\"progress\", uploadProgress, false); //监听进度\\\r\n\t\t\t\t// 设置header\r\n\t            if (typeof headers == 'object' && headers) {\r\n\t                Object.keys(headers).forEach((k) => {\r\n\t                    client.setRequestHeader(k, headers[k]);\r\n\t                })\r\n\t            }\r\n                client.send(fmData);\r\n            }).then(\r\n                // 上传成功\r\n                function(resData) {\r\n                    if (that.value) {\r\n                        that.loading = 2;\r\n                        that.$dispatch('cropUploadSuccess', resData, field, ki);\r\n                    }\r\n\r\n                },\r\n                // 上传失败\r\n                function(sts) {\r\n                    if (that.value) {\r\n                        that.loading = 3;\r\n                        that.hasError = true;\r\n                        that.errorMsg = lang.fail;\r\n                        that.$dispatch('cropUploadFail', sts, field, ki);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n    created(){\r\n        // 绑定按键esc隐藏此插件事件\r\n        document.addEventListener('keyup', (e)=>{\r\n            if(this.value && (e.key == 'Escape' || e.keyCode == 27)){\r\n                this.off();\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<!--\r\n<style lang='sass' src=\"./scss/upload.scss\">\r\n</style> -->\r\n\r\n<style>\r\n@charset \"UTF-8\";\r\n@-webkit-keyframes vicp_progress {\r\n  0% {\r\n    background-position-y: 0; }\r\n  100% {\r\n    background-position-y: 40px; } }\r\n@keyframes vicp_progress {\r\n  0% {\r\n    background-position-y: 0; }\r\n  100% {\r\n    background-position-y: 40px; } }\r\n\r\n@-webkit-keyframes vicp {\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: scale(0) translatey(-60px);\r\n            transform: scale(0) translatey(-60px); }\r\n  100% {\r\n    opacity: 1;\r\n    -webkit-transform: scale(1) translatey(0);\r\n            transform: scale(1) translatey(0); } }\r\n\r\n@keyframes vicp {\r\n  0% {\r\n    opacity: 0;\r\n    -webkit-transform: scale(0) translatey(-60px);\r\n            transform: scale(0) translatey(-60px); }\r\n  100% {\r\n    opacity: 1;\r\n    -webkit-transform: scale(1) translatey(0);\r\n            transform: scale(1) translatey(0); } }\r\n\r\n.vue-image-crop-upload {\r\n  position: fixed;\r\n  display: block;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  z-index: 10000;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  -webkit-tap-highlight-color: transparent;\r\n  -moz-tap-highlight-color: transparent; }\r\n  .vue-image-crop-upload .vicp-wrap {\r\n    -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n    position: fixed;\r\n    display: block;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    z-index: 10000;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    width: 600px;\r\n    height: 330px;\r\n    padding: 25px;\r\n    background-color: #fff;\r\n    border-radius: 2px;\r\n    -webkit-animation: vicp 0.12s ease-in;\r\n            animation: vicp 0.12s ease-in; }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-close {\r\n      position: absolute;\r\n      right: -30px;\r\n      top: -30px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-close .vicp-icon4 {\r\n        position: relative;\r\n        display: block;\r\n        width: 30px;\r\n        height: 30px;\r\n        cursor: pointer;\r\n        -webkit-transition: -webkit-transform 0.18s;\r\n        transition: -webkit-transform 0.18s;\r\n        transition: transform 0.18s;\r\n        transition: transform 0.18s, -webkit-transform 0.18s;\r\n        -webkit-transform: rotate(0);\r\n            -ms-transform: rotate(0);\r\n                transform: rotate(0); }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-close .vicp-icon4::after, .vue-image-crop-upload .vicp-wrap .vicp-close .vicp-icon4::before {\r\n          -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n                  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n          content: '';\r\n          position: absolute;\r\n          top: 12px;\r\n          left: 4px;\r\n          width: 20px;\r\n          height: 3px;\r\n          -webkit-transform: rotate(45deg);\r\n              -ms-transform: rotate(45deg);\r\n                  transform: rotate(45deg);\r\n          background-color: #fff; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-close .vicp-icon4::after {\r\n          -webkit-transform: rotate(-45deg);\r\n              -ms-transform: rotate(-45deg);\r\n                  transform: rotate(-45deg); }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-close .vicp-icon4:hover {\r\n          -webkit-transform: rotate(90deg);\r\n              -ms-transform: rotate(90deg);\r\n                  transform: rotate(90deg); }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area {\r\n      position: relative;\r\n      -webkit-box-sizing: border-box;\r\n              box-sizing: border-box;\r\n      padding: 35px;\r\n      height: 170px;\r\n      background-color: rgba(0, 0, 0, 0.03);\r\n      text-align: center;\r\n      border: 1px dashed rgba(0, 0, 0, 0.08);\r\n      overflow: hidden; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area .vicp-icon1 {\r\n        display: block;\r\n        margin: 0 auto 6px;\r\n        width: 42px;\r\n        height: 42px;\r\n        overflow: hidden; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area .vicp-icon1 .vicp-icon1-arrow {\r\n          display: block;\r\n          margin: 0 auto;\r\n          width: 0;\r\n          height: 0;\r\n          border-bottom: 14.7px solid rgba(0, 0, 0, 0.3);\r\n          border-left: 14.7px solid transparent;\r\n          border-right: 14.7px solid transparent; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area .vicp-icon1 .vicp-icon1-body {\r\n          display: block;\r\n          width: 12.6px;\r\n          height: 14.7px;\r\n          margin: 0 auto;\r\n          background-color: rgba(0, 0, 0, 0.3); }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area .vicp-icon1 .vicp-icon1-bottom {\r\n          -webkit-box-sizing: border-box;\r\n                  box-sizing: border-box;\r\n          display: block;\r\n          height: 12.6px;\r\n          border: 6px solid rgba(0, 0, 0, 0.3);\r\n          border-top: none; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area .vicp-hint {\r\n        display: block;\r\n        padding: 15px;\r\n        font-size: 14px;\r\n        color: #666;\r\n        line-height: 30px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area .vicp-no-supported-hint {\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        padding: 30px;\r\n        width: 100%;\r\n        height: 60px;\r\n        line-height: 30px;\r\n        background-color: #eee;\r\n        text-align: center;\r\n        color: #666;\r\n        font-size: 14px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step1 .vicp-drop-area:hover {\r\n        cursor: pointer;\r\n        border-color: rgba(0, 0, 0, 0.1);\r\n        background-color: rgba(0, 0, 0, 0.05); }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop {\r\n      overflow: hidden; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left {\r\n        float: left; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-img-container {\r\n          position: relative;\r\n          display: block;\r\n          width: 240px;\r\n          height: 180px;\r\n          background-color: #e5e5e0;\r\n          overflow: hidden; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-img-container .vicp-img {\r\n            position: absolute;\r\n            display: block;\r\n            cursor: move;\r\n            -webkit-user-select: none;\r\n               -moz-user-select: none;\r\n                -ms-user-select: none;\r\n                    user-select: none; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-img-container .vicp-img-shade {\r\n            -webkit-box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.18);\r\n                    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.18);\r\n            position: absolute;\r\n            background-color: rgba(241, 242, 243, 0.8); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-img-container .vicp-img-shade.vicp-img-shade-1 {\r\n              top: 0;\r\n              left: 0; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-img-container .vicp-img-shade.vicp-img-shade-2 {\r\n              bottom: 0;\r\n              right: 0; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-rotate {\r\n          position: relative;\r\n          width: 240px;\r\n          height: 18px; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-rotate i {\r\n            display: block;\r\n            width: 18px;\r\n            height: 18px;\r\n            border-radius: 100%;\r\n            line-height: 18px;\r\n            text-align: center;\r\n            font-size: 12px;\r\n            font-weight: bold;\r\n            background-color: rgba(0, 0, 0, 0.08);\r\n            color: #fff;\r\n            overflow: hidden; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-rotate i:hover {\r\n              -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n                      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n              cursor: pointer;\r\n              background-color: rgba(0, 0, 0, 0.14); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-rotate i:first-child {\r\n              float: left; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-rotate i:last-child {\r\n              float: right; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range {\r\n          position: relative;\r\n          margin: 30px 0 10px 0;\r\n          width: 240px;\r\n          height: 18px; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon5,\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon6 {\r\n            position: absolute;\r\n            top: 0;\r\n            width: 18px;\r\n            height: 18px;\r\n            border-radius: 100%;\r\n            background-color: rgba(0, 0, 0, 0.08); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon5:hover,\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon6:hover {\r\n              -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n                      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n              cursor: pointer;\r\n              background-color: rgba(0, 0, 0, 0.14); }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon5 {\r\n            left: 0; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon5::before {\r\n              position: absolute;\r\n              content: '';\r\n              display: block;\r\n              left: 3px;\r\n              top: 8px;\r\n              width: 12px;\r\n              height: 2px;\r\n              background-color: #fff; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon6 {\r\n            right: 0; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon6::before {\r\n              position: absolute;\r\n              content: '';\r\n              display: block;\r\n              left: 3px;\r\n              top: 8px;\r\n              width: 12px;\r\n              height: 2px;\r\n              background-color: #fff; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range .vicp-icon6::after {\r\n              position: absolute;\r\n              content: '';\r\n              display: block;\r\n              top: 3px;\r\n              left: 8px;\r\n              width: 2px;\r\n              height: 12px;\r\n              background-color: #fff; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range] {\r\n            display: block;\r\n            padding-top: 5px;\r\n            margin: 0 auto;\r\n            width: 180px;\r\n            height: 8px;\r\n            vertical-align: top;\r\n            background: transparent;\r\n            -webkit-appearance: none;\r\n               -moz-appearance: none;\r\n                    appearance: none;\r\n            cursor: pointer;\r\n            /* 滑块\r\n\t\t\t\t\t\t\t ---------------------------------------------------------------*/\r\n            /* 轨道\r\n\t\t\t\t\t\t\t ---------------------------------------------------------------*/ }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:focus {\r\n              outline: none; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-webkit-slider-thumb {\r\n              -webkit-box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.18);\r\n                      box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.18);\r\n              -webkit-appearance: none;\r\n                      appearance: none;\r\n              margin-top: -3px;\r\n              width: 12px;\r\n              height: 12px;\r\n              background-color: #61c091;\r\n              border-radius: 100%;\r\n              border: none;\r\n              -webkit-transition: 0.2s;\r\n              transition: 0.2s; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-moz-range-thumb {\r\n              box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.18);\r\n              -moz-appearance: none;\r\n                   appearance: none;\r\n              width: 12px;\r\n              height: 12px;\r\n              background-color: #61c091;\r\n              border-radius: 100%;\r\n              border: none;\r\n              -webkit-transition: 0.2s;\r\n              transition: 0.2s; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-ms-thumb {\r\n              box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.18);\r\n              appearance: none;\r\n              width: 12px;\r\n              height: 12px;\r\n              background-color: #61c091;\r\n              border: none;\r\n              border-radius: 100%;\r\n              -webkit-transition: 0.2s;\r\n              transition: 0.2s; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:active::-moz-range-thumb {\r\n              box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n              width: 14px;\r\n              height: 14px; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:active::-ms-thumb {\r\n              box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n              width: 14px;\r\n              height: 14px; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:active::-webkit-slider-thumb {\r\n              -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n                      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.23);\r\n              margin-top: -4px;\r\n              width: 14px;\r\n              height: 14px; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-webkit-slider-runnable-track {\r\n              -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n                      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n              width: 100%;\r\n              height: 6px;\r\n              cursor: pointer;\r\n              border-radius: 2px;\r\n              border: none;\r\n              background-color: rgba(68, 170, 119, 0.3); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-moz-range-track {\r\n              box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n              width: 100%;\r\n              height: 6px;\r\n              cursor: pointer;\r\n              border-radius: 2px;\r\n              border: none;\r\n              background-color: rgba(68, 170, 119, 0.3); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-ms-track {\r\n              box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n              width: 100%;\r\n              cursor: pointer;\r\n              background: transparent;\r\n              border-color: transparent;\r\n              color: transparent;\r\n              height: 6px;\r\n              border-radius: 2px;\r\n              border: none; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-ms-fill-lower {\r\n              background-color: rgba(68, 170, 119, 0.3); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]::-ms-fill-upper {\r\n              background-color: rgba(68, 170, 119, 0.15); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:focus::-webkit-slider-runnable-track {\r\n              background-color: rgba(68, 170, 119, 0.5); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:focus::-moz-range-track {\r\n              background-color: rgba(68, 170, 119, 0.5); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:focus::-ms-fill-lower {\r\n              background-color: rgba(68, 170, 119, 0.45); }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-left .vicp-range input[type=range]:focus::-ms-fill-upper {\r\n              background-color: rgba(68, 170, 119, 0.25); }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right {\r\n        float: right; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right .vicp-preview {\r\n          height: 150px;\r\n          overflow: hidden; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right .vicp-preview .vicp-preview-item {\r\n            position: relative;\r\n            padding: 5px;\r\n            width: 100px;\r\n            height: 100px;\r\n            float: left;\r\n            margin-right: 16px; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right .vicp-preview .vicp-preview-item span {\r\n              position: absolute;\r\n              bottom: -30px;\r\n              width: 100%;\r\n              font-size: 14px;\r\n              color: #bbb;\r\n              display: block;\r\n              text-align: center; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right .vicp-preview .vicp-preview-item img {\r\n              position: absolute;\r\n              display: block;\r\n              top: 0;\r\n              bottom: 0;\r\n              left: 0;\r\n              right: 0;\r\n              margin: auto;\r\n              padding: 3px;\r\n              background-color: #fff;\r\n              border: 1px solid rgba(0, 0, 0, 0.15);\r\n              overflow: hidden;\r\n              -webkit-user-select: none;\r\n                 -moz-user-select: none;\r\n                  -ms-user-select: none;\r\n                      user-select: none; }\r\n            .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right .vicp-preview .vicp-preview-item.vicp-preview-item-circle {\r\n              margin-right: 0; }\r\n              .vue-image-crop-upload .vicp-wrap .vicp-step2 .vicp-crop .vicp-crop-right .vicp-preview .vicp-preview-item.vicp-preview-item-circle img {\r\n                border-radius: 100%; }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload {\r\n      position: relative;\r\n      -webkit-box-sizing: border-box;\r\n              box-sizing: border-box;\r\n      padding: 35px;\r\n      height: 170px;\r\n      background-color: rgba(0, 0, 0, 0.03);\r\n      text-align: center;\r\n      border: 1px dashed #ddd; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload .vicp-loading {\r\n        display: block;\r\n        padding: 15px;\r\n        font-size: 16px;\r\n        color: #999;\r\n        line-height: 30px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload .vicp-progress-wrap {\r\n        margin-top: 12px;\r\n        background-color: rgba(0, 0, 0, 0.08);\r\n        border-radius: 3px; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload .vicp-progress-wrap .vicp-progress {\r\n          position: relative;\r\n          display: block;\r\n          height: 5px;\r\n          border-radius: 3px;\r\n          background-color: #4a7;\r\n          -webkit-box-shadow: 0 2px 6px 0 rgba(68, 170, 119, 0.3);\r\n                  box-shadow: 0 2px 6px 0 rgba(68, 170, 119, 0.3);\r\n          -webkit-transition: width 0.15s linear;\r\n          transition: width 0.15s linear;\r\n          background-image: -webkit-linear-gradient(135deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\r\n          background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\r\n          background-size: 40px 40px;\r\n          -webkit-animation: vicp_progress 0.5s linear infinite;\r\n                  animation: vicp_progress 0.5s linear infinite; }\r\n          .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload .vicp-progress-wrap .vicp-progress::after {\r\n            content: '';\r\n            position: absolute;\r\n            display: block;\r\n            top: -3px;\r\n            right: -3px;\r\n            width: 9px;\r\n            height: 9px;\r\n            border: 1px solid rgba(245, 246, 247, 0.7);\r\n            -webkit-box-shadow: 0 1px 4px 0 rgba(68, 170, 119, 0.7);\r\n                    box-shadow: 0 1px 4px 0 rgba(68, 170, 119, 0.7);\r\n            border-radius: 100%;\r\n            background-color: #4a7; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload .vicp-error,\r\n      .vue-image-crop-upload .vicp-wrap .vicp-step3 .vicp-upload .vicp-success {\r\n        height: 100px;\r\n        line-height: 100px; }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-operate {\r\n      position: absolute;\r\n      right: 20px;\r\n      bottom: 20px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-operate a {\r\n        position: relative;\r\n        float: left;\r\n        display: block;\r\n        margin-left: 10px;\r\n        width: 100px;\r\n        height: 36px;\r\n        line-height: 36px;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n        color: #4a7;\r\n        border-radius: 2px;\r\n        overflow: hidden;\r\n        -webkit-user-select: none;\r\n           -moz-user-select: none;\r\n            -ms-user-select: none;\r\n                user-select: none; }\r\n        .vue-image-crop-upload .vicp-wrap .vicp-operate a:hover {\r\n          background-color: rgba(0, 0, 0, 0.03); }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-error,\r\n    .vue-image-crop-upload .vicp-wrap .vicp-success {\r\n      display: block;\r\n      font-size: 14px;\r\n      line-height: 24px;\r\n      height: 24px;\r\n      color: #d10;\r\n      text-align: center;\r\n      vertical-align: top; }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-success {\r\n      color: #4a7; }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-icon3 {\r\n      position: relative;\r\n      display: inline-block;\r\n      width: 20px;\r\n      height: 20px;\r\n      top: 4px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-icon3::after {\r\n        position: absolute;\r\n        top: 3px;\r\n        left: 6px;\r\n        width: 6px;\r\n        height: 10px;\r\n        border-width: 0 2px 2px 0;\r\n        border-color: #4a7;\r\n        border-style: solid;\r\n        -webkit-transform: rotate(45deg);\r\n            -ms-transform: rotate(45deg);\r\n                transform: rotate(45deg);\r\n        content: ''; }\r\n    .vue-image-crop-upload .vicp-wrap .vicp-icon2 {\r\n      position: relative;\r\n      display: inline-block;\r\n      width: 20px;\r\n      height: 20px;\r\n      top: 4px; }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-icon2::after, .vue-image-crop-upload .vicp-wrap .vicp-icon2::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 9px;\r\n        left: 4px;\r\n        width: 13px;\r\n        height: 2px;\r\n        background-color: #d10;\r\n        -webkit-transform: rotate(45deg);\r\n            -ms-transform: rotate(45deg);\r\n                transform: rotate(45deg); }\r\n      .vue-image-crop-upload .vicp-wrap .vicp-icon2::after {\r\n        -webkit-transform: rotate(-45deg);\r\n            -ms-transform: rotate(-45deg);\r\n                transform: rotate(-45deg); }\r\n\r\n.e-ripple {\r\n  position: absolute;\r\n  border-radius: 100%;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  background-clip: padding-box;\r\n  pointer-events: none;\r\n  -webkit-user-select: none;\r\n     -moz-user-select: none;\r\n      -ms-user-select: none;\r\n          user-select: none;\r\n  -webkit-transform: scale(0);\r\n      -ms-transform: scale(0);\r\n          transform: scale(0);\r\n  opacity: 1; }\r\n  .e-ripple.z-active {\r\n    opacity: 0;\r\n    -webkit-transform: scale(2);\r\n        -ms-transform: scale(2);\r\n            transform: scale(2);\r\n    -webkit-transition: opacity 1.2s ease-out, -webkit-transform 0.6s ease-out;\r\n    transition: opacity 1.2s ease-out, -webkit-transform 0.6s ease-out;\r\n    transition: opacity 1.2s ease-out, transform 0.6s ease-out;\r\n    transition: opacity 1.2s ease-out, transform 0.6s ease-out, -webkit-transform 0.6s ease-out; }\r\n\r\n</style>\r\n"]}]}